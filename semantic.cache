;; Object frdcsa-el/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "frdcsa-el/"
  :tables (list 
   (semanticdb-table "myfrdcsa.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("load" code nil nil [48 108]) ("load" code nil nil [109 168]) ("load" code nil nil [169 230]) ("load" code nil nil [231 294]) ("load" code nil nil [295 368]) ("load" code nil nil [369 424]) ("load" code nil nil [425 484]) ("load" code nil nil [485 548]) ("load" code nil nil [549 611]) ("visit-tags-table" code nil nil [613 661]) ("global-set-key" code nil nil [662 703]) ("reload-etags" function (:user-visible-flag t) nil [705 937]) ("update" function (:user-visible-flag t) nil [939 995]) ("myfrdcsa-convert-emacs-to-cyc-style" function (:user-visible-flag t) nil [997 1330]) ("global-set-key" code nil nil [1332 1373]))
    :file "myfrdcsa.el"
    :pointmax 1503
    :unmatched-syntax 'nil
    )
   (semanticdb-table "lupan-emacs.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("if" code nil nil [2391 2462]) ("when" code nil nil [2486 2600]) ("set-language-environment" code nil nil [2772 2808]) ("codepage-setup" code nil nil [2837 2859]) ("prefer-coding-system" code nil nil [2907 2937]) ("if" code nil nil [2960 3023]) ("prefer-coding-system" code nil nil [3042 3077]) ("if" code nil nil [3120 3611]) ("setq" code nil nil [3872 3900]) ("when" code nil nil [3901 4944]) ("column-number-mode" code nil nil [4948 4970]) ("setq" code nil nil [5015 5047]) ("setq" code nil nil [5048 5090]) ("setq" code nil nil [5112 5144]) ("setq" code nil nil [5307 5343]) ("resize-minibuffer-mode" code nil nil [5437 5463]) ("setq" code nil nil [5591 5616]) ("when" code nil nil [5786 5917]) ("my-protect-buffer" function (:arguments ("name")) nil [6102 6309]) ("my-protect-buffer" code nil nil [6311 6342]) ("if" code nil nil [6346 6482]) ("add-hook" code nil nil [6780 6940]) ("global-set-key" code nil nil [7047 7080]) ("global-set-key" code nil nil [7081 7125]) ("if" code nil nil [7170 7283]) ("generic-x" include nil nil [7284 7310]) ("setq" code nil nil [7449 7484]) ("global-set-key" code nil nil [7486 7524]) ("setq" code nil nil [7562 7595]) ("display-time" code nil nil [7596 7610]) ("setq" code nil nil [7718 7753]) ("when" code nil nil [7792 8010]) ("auto-compression-mode" code nil nil [8106 8131]) ("show-paren-mode" code nil nil [8236 8255]) ("setq" code nil nil [8511 8804]) ("if" code nil nil [9093 9180]) ("if" code nil nil [9254 9351]) ("when" code nil nil [9353 9502]) ("if" code nil nil [9543 10029]) ("add-hook" code nil nil [10034 10096]) ("add-hook" code nil nil [10098 10279]) ("add-hook" code nil nil [10281 10440]) ("add-hook" code nil nil [10442 10525]) ("add-hook" code nil nil [10527 10629]) ("setq" code nil nil [10828 10909]) ("lookup-word" function (:prototype-flag t :user-visible-flag t) nil [10910 10948]) ("lookup-pattern" function (:prototype-flag t :user-visible-flag t) nil [10949 10990]) ("ogonek-recode-buffer" function (:prototype-flag t :user-visible-flag t) nil [11081 11128]) ("ogonek-recode-region" function (:prototype-flag t :user-visible-flag t) nil [11129 11176]) ("setq" code nil nil [11177 11254]) ("py-shell" function (:prototype-flag t :user-visible-flag t) nil [11257 11297]) ("pymacs-load" function (:prototype-flag t :user-visible-flag t) nil [11326 11364]) ("pymacs-eval" function (:prototype-flag t :user-visible-flag t) nil [11365 11403]) ("pymacs-apply" function (:prototype-flag t) nil [11404 11437]) ("pymacs-call" function (:prototype-flag t) nil [11438 11470]) ("fp-maybe-pymacs-reload" function nil nil [11472 11786]) ("add-hook" code nil nil [11788 11839]) ("svn-status" function (:prototype-flag t :user-visible-flag t) nil [11919 11954]) ("when" code nil nil [12118 12268]) ("local-set-key-if-no-binding" function (:arguments ("key" "command")) nil [12275 12383]) ("add-hook" code nil nil [12405 12745]) ("maxima-mode" function (:prototype-flag t :user-visible-flag t) nil [12746 12794]) ("setq" code nil nil [12795 12866]) ("global-set-key" code nil nil [12901 12941]) ("global-set-key" code nil nil [12966 13021]) ("global-set-key" code nil nil [13183 13216]) ("global-set-key" code nil nil [13217 13252]) ("global-set-key" code nil nil [13253 13286]) ("global-set-key" code nil nil [13287 13319]) ("global-set-key" code nil nil [13320 13352]) ("global-set-key" code nil nil [13353 13383]) ("global-set-key" code nil nil [13386 13431]) ("global-set-key" code nil nil [13432 13479]) ("global-set-key" code nil nil [13480 13516]) ("global-set-key" code nil nil [13517 13552]) ("global-set-key" code nil nil [13553 13588]) ("global-set-key" code nil nil [13589 13622]) ("global-set-key" code nil nil [13623 13656]) ("global-set-key" code nil nil [13657 13687]) ("global-set-key" code nil nil [13720 13751]) ("global-set-key" code nil nil [13752 13804]) ("global-set-key" code nil nil [13805 13933]) ("global-set-key" code nil nil [13934 13971]) ("global-set-key" code nil nil [13989 14029]) ("global-set-key" code nil nil [14045 14170]) ("global-set-key" code nil nil [14171 14295]) ("global-set-key" code nil nil [14296 14419]) ("global-set-key" code nil nil [14420 14457]) ("global-set-key" code nil nil [14458 14489]) ("global-set-key" code nil nil [14490 14530]) ("if" code nil nil [14583 14652]) ("global-set-key" code nil nil [14705 14747]) ("global-set-key" code nil nil [14748 14789]) ("global-set-key" code nil nil [14791 14829]) ("global-set-key" code nil nil [14830 14877]) ("my-kill-buffer-other-window" function nil nil [14879 15009]) ("global-set-key" code nil nil [15010 15064]) ("when" code nil nil [15361 16218]) ("my-color-values" function (:arguments ("name")) nil [16268 16652]) ("my-hex-color-values" function (:user-visible-flag t :arguments ("name" "insert-p")) nil [16654 17105]) ("my-apropos" function (:user-visible-flag t :arguments ("str")) nil [17107 17321]) ("my-grep-find-headers" function (:user-visible-flag t :arguments ("grep-regexp")) nil [17323 17715]) ("my-grep-default-directory" function (:user-visible-flag t :arguments ("grep-regexp")) nil [17718 18086]) ("insert-date-and-time" function (:user-visible-flag t) nil [18192 18362]) ("me" function (:user-visible-flag t) nil [18364 18527]) ("my-average" function (:user-visible-flag t) nil [18530 19139]) ("my-sort-region" function (:user-visible-flag t :arguments ("beg" "end" "char")) nil [19142 19543]) ("my-mirror-dir" function (:arguments ("dir")) nil [19545 19908]) ("my-hard-mirror-dir" function (:arguments ("dir")) nil [19910 20273]) ("my-unbreakable" function (:user-visible-flag t) nil [20276 20513]) ("my-xlock-blank" function (:user-visible-flag t) nil [20557 20670]) ("my-eject" function (:user-visible-flag t) nil [20672 20741]) ("my-mount-cdrom" function (:user-visible-flag t) nil [20743 20834]) ("my-view-a2ps-buffer" function (:user-visible-flag t :arguments ("&optional" "print-region")) nil [20836 21734]) ("my-view-ps-printed-buffer" function (:user-visible-flag t :arguments ("&optional" "print-region")) nil [21736 22466]) ("my-html-to-ps" function (:user-visible-flag t :arguments ("file" "&optional" "wildcards")) nil [22468 23093]) ("if" code nil nil [23095 23285]) ("if" code nil nil [23391 23462]) ("load" code nil nil [23464 23483]) ("if" code nil nil [23660 23703]) ("load" code nil nil [23748 23766]) ("rst-mode" function (:prototype-flag t :user-visible-flag t) nil [23768 23805]) ("song-slides-mode" function (:prototype-flag t :user-visible-flag t) nil [23807 23855]) ("add-to-list" code nil nil [23856 23923]) ("tex-site" include nil nil [24142 24167]) ("setq" code nil nil [24224 24323]) ("setq" code nil nil [24436 24844]) ("add-hook" code nil nil [24930 25087]) ("cm" function (:arguments ("x")) nil [25137 25169]) ("setq" code nil nil [25170 25197]) ("add-hook" code nil nil [25301 26412]) ("add-hook" code nil nil [26539 26847]) ("if" code nil nil [26850 27013]) ("my-eshell-toggle" function (:user-visible-flag t :arguments ("make-cd")) nil [27064 27578]) ("linux-c-mode" function (:user-visible-flag t) nil [27655 27807]) ("add-hook" code nil nil [27809 28007]) ("add-hook" code nil nil [28010 28073]) ("my-pycheck-visited-file" function (:user-visible-flag t) nil [28076 28232]) ("add-hook" code nil nil [28234 28458]) ("add-hook" code nil nil [28460 28500]) ("dired-run-shell-command" function (:prototype-flag t :user-visible-flag t) nil [28589 28641]) ("dired-shell-stuff-it" function (:prototype-flag t :user-visible-flag t) nil [28642 28691]) ("my-dired-do-see" function (:user-visible-flag t :arguments ("&optional" "prefix")) nil [28693 28932]) ("my-dired-do-edit" function (:user-visible-flag t) nil [28934 29185]) ("add-hook" code nil nil [29186 29351]) ("add-hook" code nil nil [29353 29450]) ("add-hook" code nil nil [29452 29499]) ("add-hook" code nil nil [29501 29656]) ("lupan-all-ctrl-m-to-ctrl-j" function (:arguments ("string")) nil [29783 29922]) ("add-hook" code nil nil [29923 29996]) ("my-tex-soft-newline" function (:user-visible-flag t) nil [29998 30133]) ("add-hook" code nil nil [30135 30337]) ("add-hook" code nil nil [30339 30501]) ("setq" code nil nil [30503 30640]) ("sql-postgres" function (:prototype-flag t :user-visible-flag t) nil [30642 30698]) ("setq" code nil nil [30816 30900]) ("when" code nil nil [31077 31423]) ("setq" code nil nil [31507 31532]) ("put" code nil nil [31571 31607]) ("put" code nil nil [31608 31642]) ("put" code nil nil [31643 31678]) ("put" code nil nil [31679 31716]) ("custom-set-variables" code nil nil [31718 32419]) ("custom-set-faces" code nil nil [32420 35219]))
    :file "lupan-emacs.el"
    :pointmax 35559
    :unmatched-syntax 'nil
    )
   (semanticdb-table "frdcsa-el.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("setq" code nil nil [508 576]) ("load" code nil nil [577 618]) ("load" code nil nil [619 660]) ("load" code nil nil [661 705]) ("load" code nil nil [706 746]) ("load" code nil nil [747 794]))
    :file "frdcsa-el.el"
    :pointmax 861
    :unmatched-syntax 'nil
    )
   (semanticdb-table "frdcsa-utils.el"
    :major-mode 'emacs-lisp-mode
    :tags 'nil
    :file "frdcsa-utils.el"
    )
   (semanticdb-table "hooks.el"
    :major-mode 'emacs-lisp-mode
    :tags 'nil
    :file "hooks.el"
    )
   (semanticdb-table "prefs.el"
    :major-mode 'emacs-lisp-mode
    :tags 'nil
    :file "prefs.el"
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta3"
  :semanticdb-version "2.0beta3"
  )
